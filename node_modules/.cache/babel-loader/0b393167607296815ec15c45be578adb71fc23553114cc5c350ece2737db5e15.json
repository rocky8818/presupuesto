{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ricardo\\\\React1\\\\presupuesto\\\\src\\\\components\\\\BudgetCard.js\";\nimport { Button, Card, ProgressBar, Stack } from \"react-bootstrap\";\nimport { currencyFormatter } from \"../utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function BudgetCard(_ref) {\n  let {\n    name,\n    amount,\n    max,\n    gray,\n    onAddExpenseClick,\n    onViewExpensesClick\n  } = _ref;\n  const classNames = [];\n  if (amount > max) {\n    classNames.push(\"bg-danger\", \"bg-opacity-10\");\n  } else if (gray) {\n    classNames.push(\"bg-light\");\n  }\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classNames.join(\" \"),\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n        className: \"d-flex justify-content-between align-items-baseline fw-normal mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"me-2\",\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex align-items-base\\xF1ine\",\n          children: [currencyFormatter.format(amount), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-muted fs-s ms-1\",\n            children: [\"/\", currencyFormatter.format(max)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n        className: \"rounded-pill\",\n        variant: getProgressBarVariant(amount, max),\n        min: 0,\n        max: max,\n        now: amount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this), !hideButtons && /*#__PURE__*/_jsxDEV(Stack, {\n        direction: \"horizontal\",\n        gap: \"2\",\n        className: \"mt-4\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline-primary\",\n          className: \"ms-auto\",\n          onClick: onAddExpenseClick,\n          children: \"Agregar Gasto\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline-secondary\",\n          onClick: onViewExpensesClick,\n          children: \"Ver Gasto\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n_c = BudgetCard;\nfunction getProgressBarVariant(amount, max) {\n  const ratio = amount / max;\n  if (ratio < .5) return \"primary\";\n  if (ratio < 0.75) return \"warning\";\n  return \"danger\";\n}\nvar _c;\n$RefreshReg$(_c, \"BudgetCard\");","map":{"version":3,"names":["Button","Card","ProgressBar","Stack","currencyFormatter","jsxDEV","_jsxDEV","BudgetCard","_ref","name","amount","max","gray","onAddExpenseClick","onViewExpensesClick","classNames","push","className","join","children","Body","Title","fileName","_jsxFileName","lineNumber","columnNumber","format","variant","getProgressBarVariant","min","now","hideButtons","direction","gap","onClick","_c","ratio","$RefreshReg$"],"sources":["C:/Users/Ricardo/React1/presupuesto/src/components/BudgetCard.js"],"sourcesContent":["import { Button, Card, ProgressBar, Stack } from \"react-bootstrap\"\r\nimport  {currencyFormatter}  from \"../utils\"\r\n\r\nexport default function BudgetCard({name, amount, max, gray, onAddExpenseClick, onViewExpensesClick}) {\r\n\r\n    const classNames = []\r\n    if (amount > max){\r\n        classNames.push(\"bg-danger\", \"bg-opacity-10\")\r\n    } else if (gray) {\r\n        classNames.push(\"bg-light\")\r\n    }\r\n    return (\r\n    <Card className={classNames.join(\" \")}>\r\n        <Card.Body>\r\n            <Card.Title className=\"d-flex justify-content-between align-items-baseline fw-normal mb-3\">\r\n                <div className=\"me-2\">{name}</div>\r\n                <div className=\"d-flex align-items-baseÃ±ine\">\r\n                    {currencyFormatter.format(amount)}\r\n                    <span className=\"text-muted fs-s ms-1\">/{currencyFormatter.format(max)}</span>\r\n                </div>\r\n            </Card.Title>\r\n            <ProgressBar \r\n                className=\"rounded-pill\" \r\n                variant = {getProgressBarVariant(amount, max)}\r\n                min = {0}\r\n                max = {max}\r\n                now = {amount}\r\n            />\r\n            {!hideButtons && (\r\n                <Stack direction = \"horizontal\" gap=\"2\" className=\"mt-4\">\r\n                    <Button variant= \"outline-primary\" className=\"ms-auto\" onClick={onAddExpenseClick}>Agregar Gasto</Button>\r\n                    <Button variant=\"outline-secondary\" onClick={onViewExpensesClick}>Ver Gasto</Button>\r\n                </Stack>\r\n            )}\r\n        </Card.Body>\r\n    </Card>\r\n    )\r\n}\r\n\r\n\r\nfunction getProgressBarVariant(amount, max){\r\n    const ratio = amount/max\r\n    if(ratio < .5) return \"primary\"\r\n    if (ratio < 0.75) return \"warning\"\r\n    return \"danger\"\r\n}"],"mappings":";AAAA,SAASA,MAAM,EAAEC,IAAI,EAAEC,WAAW,EAAEC,KAAK,QAAQ,iBAAiB;AAClE,SAASC,iBAAiB,QAAQ,UAAU;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE5C,eAAe,SAASC,UAAUA,CAAAC,IAAA,EAAoE;EAAA,IAAnE;IAACC,IAAI;IAAEC,MAAM;IAAEC,GAAG;IAAEC,IAAI;IAAEC,iBAAiB;IAAEC;EAAmB,CAAC,GAAAN,IAAA;EAEhG,MAAMO,UAAU,GAAG,EAAE;EACrB,IAAIL,MAAM,GAAGC,GAAG,EAAC;IACbI,UAAU,CAACC,IAAI,CAAC,WAAW,EAAE,eAAe,CAAC;EACjD,CAAC,MAAM,IAAIJ,IAAI,EAAE;IACbG,UAAU,CAACC,IAAI,CAAC,UAAU,CAAC;EAC/B;EACA,oBACAV,OAAA,CAACL,IAAI;IAACgB,SAAS,EAAEF,UAAU,CAACG,IAAI,CAAC,GAAG,CAAE;IAAAC,QAAA,eAClCb,OAAA,CAACL,IAAI,CAACmB,IAAI;MAAAD,QAAA,gBACNb,OAAA,CAACL,IAAI,CAACoB,KAAK;QAACJ,SAAS,EAAC,oEAAoE;QAAAE,QAAA,gBACtFb,OAAA;UAAKW,SAAS,EAAC,MAAM;UAAAE,QAAA,EAAEV;QAAI;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAO,eAClCnB,OAAA;UAAKW,SAAS,EAAC,gCAA6B;UAAAE,QAAA,GACvCf,iBAAiB,CAACsB,MAAM,CAAChB,MAAM,CAAC,eACjCJ,OAAA;YAAMW,SAAS,EAAC,sBAAsB;YAAAE,QAAA,GAAC,GAAC,EAACf,iBAAiB,CAACsB,MAAM,CAACf,GAAG,CAAC;UAAA;YAAAW,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAQ;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAC5E;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACG,eACbnB,OAAA,CAACJ,WAAW;QACRe,SAAS,EAAC,cAAc;QACxBU,OAAO,EAAIC,qBAAqB,CAAClB,MAAM,EAAEC,GAAG,CAAE;QAC9CkB,GAAG,EAAI,CAAE;QACTlB,GAAG,EAAIA,GAAI;QACXmB,GAAG,EAAIpB;MAAO;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAChB,EACD,CAACM,WAAW,iBACTzB,OAAA,CAACH,KAAK;QAAC6B,SAAS,EAAG,YAAY;QAACC,GAAG,EAAC,GAAG;QAAChB,SAAS,EAAC,MAAM;QAAAE,QAAA,gBACpDb,OAAA,CAACN,MAAM;UAAC2B,OAAO,EAAE,iBAAiB;UAACV,SAAS,EAAC,SAAS;UAACiB,OAAO,EAAErB,iBAAkB;UAAAM,QAAA,EAAC;QAAa;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAS,eACzGnB,OAAA,CAACN,MAAM;UAAC2B,OAAO,EAAC,mBAAmB;UAACO,OAAO,EAAEpB,mBAAoB;UAAAK,QAAA,EAAC;QAAS;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAS;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAE3F;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACO;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACT;AAEX;AAACU,EAAA,GAlCuB5B,UAAU;AAqClC,SAASqB,qBAAqBA,CAAClB,MAAM,EAAEC,GAAG,EAAC;EACvC,MAAMyB,KAAK,GAAG1B,MAAM,GAACC,GAAG;EACxB,IAAGyB,KAAK,GAAG,EAAE,EAAE,OAAO,SAAS;EAC/B,IAAIA,KAAK,GAAG,IAAI,EAAE,OAAO,SAAS;EAClC,OAAO,QAAQ;AACnB;AAAC,IAAAD,EAAA;AAAAE,YAAA,CAAAF,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}